<?xml version='1.0' encoding='utf-8'?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>gwax (Posts about golang)</title>
    <link>https://gwax.com/</link>
    <description/>
    <atom:link href="https://gwax.com/categories/golang.xml" rel="self" type="application/rss+xml"/>
    <language>en</language>
    <copyright>Contents &amp;copy;2005-2024 &lt;a href="link://slug/about-person"&gt;George Leslie-Waksman&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-sa/4.0/"&gt;
    &lt;img
        src="https://i.creativecommons.org/l/by-sa/4.0/80x15.png"
        alt="Creative Commons License BY-SA"
        style="border:0;margin:0;"
    /&gt;
&lt;/a&gt;
</copyright>
    <lastBuildDate>Sat, 20 Jan 2024 00:39:03 GMT</lastBuildDate>
    <generator>Nikola (getnikola.com)</generator>
    <docs>http://blogs.law.harvard.edu/tech/rss</docs>
    <item>
      <title>An Arbitrary map from SQL with Go</title>
      <link>https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html</link>
      <dc:creator>George Leslie-Waksman</dc:creator>
      <description>&lt;p&gt;I've been writing a lot of &lt;a class="reference external" href="https://golang.org/"&gt;Go&lt;/a&gt; lately and finding it a pleasant balance of
simplicity, power, functionality, and ecosystem support. In a lot of cases, I
am finding the guarantees afforded by type safety to be really nice but,
occasionally, the strict requirements can make some easy things much harder
than I want them to be.&lt;/p&gt;
&lt;p&gt;Recently, I found myself wanting to test the behavior of some code the hit a
SQL database. Specifically, I wanted to check the results of a handful of
queries with varied columns and column types. With &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;, I'd approach this
with &lt;a class="reference external" href="https://www.sqlalchemy.org/"&gt;SQLAlchemy&lt;/a&gt;, and turn the result into a &lt;code&gt;list&lt;/code&gt; of &lt;code&gt;dict&lt;/code&gt;s.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_7ce6a8c5cc024f9abe6ee374f91ccecc-1" name="rest_code_7ce6a8c5cc024f9abe6ee374f91ccecc-1" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_7ce6a8c5cc024f9abe6ee374f91ccecc-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;rows_to_dicts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_7ce6a8c5cc024f9abe6ee374f91ccecc-2" name="rest_code_7ce6a8c5cc024f9abe6ee374f91ccecc-2" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_7ce6a8c5cc024f9abe6ee374f91ccecc-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;"""Covert a SQLAlchemy RowProxy into a list of dicts."""&lt;/span&gt;
&lt;a id="rest_code_7ce6a8c5cc024f9abe6ee374f91ccecc-3" name="rest_code_7ce6a8c5cc024f9abe6ee374f91ccecc-3" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_7ce6a8c5cc024f9abe6ee374f91ccecc-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From here, it's pretty straightforward to assert the result matches
expectations. If you're using &lt;a class="reference external" href="https://docs.pytest.org/en/latest/"&gt;pytest&lt;/a&gt;, you'll also get really clear details on
where the results aren't what you expect. If you don't have the expected
columns or column types spot on, you're assertion will be off but you won't
hit any underlying errors at this point of your testing.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://golang.org/"&gt;Go&lt;/a&gt;, on the other hand doesn't have quite as easy an option. The crux of the
problem is that the only way to get a result row out of a sql query is via
&lt;a class="reference external" href="https://golang.org/pkg/database/sql/#Rows.Scan"&gt;(*Rows) Scan&lt;/a&gt;, which
demands you know something about the structure of the result before you
query. Luckily &lt;code&gt;Scan&lt;/code&gt; is happy to read anything into a &lt;code&gt;*string&lt;/code&gt;
as long as you're asking for the right number of values so we can write an
equivalent function to the python list comprehension.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code go"&gt;&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-1" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-1" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-2" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-2" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;"database/sql"&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-3" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-3" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-4" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-4" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-5" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-5" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-5"&gt;&lt;/a&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;RowsToMaps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-6" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-6" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Columns&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-7" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-7" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-8" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-8" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-9" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-9" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-10" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-10" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;columnCount&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-11" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-11" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-12" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-12" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;cursor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kd"&gt;interface&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;columnCount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-13" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-13" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;columnCount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-14" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-14" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-14"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;columnValue&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-15" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-15" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;columnValue&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-16" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-16" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-17" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-17" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-17"&gt;&lt;/a&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-18" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-18" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;resultMaps&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-19" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-19" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-20" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-20" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-21" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-21" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-22" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-22" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;resultMaps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-23" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-23" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-24" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-24" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;rowMap&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;columnCount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-25" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-25" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;columnPtr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;cursor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-26" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-26" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-27" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-27" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-27"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;columnStr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-28" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-28" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-28"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;columnStrPtr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;columnPtr&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;columnStrPtr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-29" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-29" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;columnStr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;columnStrPtr&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-30" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-30" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-30"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-31" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-31" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;rowMap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;columnStr&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-32" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-32" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-33" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-33" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;resultMaps&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resultMaps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rowMap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-34" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-34" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-35" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-35" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-36" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-36" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;resultMaps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-37" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-37" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-37"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-38" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-38" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-38"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;resultMaps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;a id="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-39" name="rest_code_6d8b0426b69c4420827ce283ca4f5ef2-39" href="https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html#rest_code_6d8b0426b69c4420827ce283ca4f5ef2-39"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This, much like the &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; above, gives us a list of maps of column name
to column value, with the minor caveats that all values are strings and
&lt;code&gt;NULL&lt;/code&gt; values become empty strings. I found it a useful chunk of code,
so I thought I'd throw it up.&lt;/p&gt;
&lt;p&gt;Sure, it's more verbose but sometimes that's the price we pay for dealing
with dynamic results in a staticly typed language. There are other prices
paid in the other direction.&lt;/p&gt;</description>
      <category>code snippets</category>
      <category>golang</category>
      <guid>https://gwax.com/blog/2019/10/an-arbitrary-map-from-sql-with-go.html</guid>
      <pubDate>Mon, 21 Oct 2019 04:13:56 GMT</pubDate>
    </item>
  </channel>
</rss>
