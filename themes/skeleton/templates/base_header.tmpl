## -*- coding: utf-8 -*-
<%namespace name="base" file="base_helper.tmpl" import="*"/>

<%def name="html_header()">
    <header id="header">
        <div class="row">
            <div class="six columns">
                ${html_site_title()}
            </div>
            ${html_translation_header()}
            %if search_form:
                <div class="three columns u-pull-right">
                    <div class="searchform" role="search">
                        ${search_form}
                    </div>
                </div>
            %endif
        </div>
    </header>
    ${html_navigation_links()}
    ${template_hooks['page_header']()}
</%def>

<%def name="html_site_title()">
    <h1 id="brand" class="title"><a href="${abs_link(_link("root", None, lang))}" title="${blog_title|h}" rel="home">
    %if logo_url:
        <img src="${logo_url}" alt="${blog_title|h}" id="logo">
    %endif

    % if show_blog_title:
        <span id="blog-title">${blog_title|h}</span>
    % endif
    </a></h1>
</%def>

<%def name="html_navigation_links()">
    <nav class="bar">
    ${html_navbar_items(navigation_links[lang])}
    ${html_navbar_items(navigation_alt_links[lang])}
    </nav>

    <nav class="select">
    <select>
    ${html_navselect_options(navigation_links[lang])}
    ${html_navselect_options(navigation_alt_links[lang])}
    </select>
    </nav>
</%def>

<%def name="html_navbar_items(navigation_links)">
    ## Note: although we use recursion, only two levels are supported by the CSS
    %for url, text in navigation_links:
        %if isinstance(url, tuple):
            <li><span>${text}</span>
                <ul>
                ${html_navbar_items(url)}
                </ul>
            </li>
        %elif rel_link(permalink, url_replacer('/', url)) == "#":
            <li><span class="initial">${text}</span></li>
        %else:
            <li><a href="${url}">${text}</a></li>
        %endif
    %endfor
</%def>

<%def name="html_navselect_options(navigation_links)">
    ## Note: although we use recursion, only two levels are support because html does not support nested optgroup
    %for url, text in navigation_links:
        %if isinstance(url, tuple):
            <optgroup label="${text}">
            ${html_navselect_options(url)}
            </optgroup>
        %elif rel_link(permalink, url_replacer('/', url)) == "#":
            <option value="${permalink}" selected disabled class="initial">${text}</option>
        %else:
            <option value="${url_replacer('/', url)}">${text}</option>
        %endif
    %endfor
</%def>

<%def name="html_translation_header()">
    %if len(translations) > 1:
        <div class="three columns u-pull-right">
            <h2>${messages("Languages:")}</h2>
            ${base.html_translations()}
        </div>
    %endif
</%def>
